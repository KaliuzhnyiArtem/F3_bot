# Aiogram
from loader import dp, bot
from aiogram import types
from aiogram.types import LabeledPrice, ContentType
from aiogram.dispatcher import FSMContext

# Database
from database.memberships_db import info_membersips
from database.msg_id_history_db import add_message_from_bot

# Other
from keybords.menu_buttons import r_back_to_menu
from other.func_other import dell_message
from config import PAYMENT_TOKEN


@dp.callback_query_handler(lambda c: c.data.startswith('abon'))
async def action_member_inline(c: types.CallbackQuery, state: FSMContext):

    id_membersip = int(c.data.split('-')[1])
    memberships_info = await info_membersips(id_membersip)

    await c.answer('–ß—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Äüëçüèª')

    if memberships_info[1] == '–ü—Ä–æ–≥—Ä–∞–º–∞ F3':
        msg = await bot.send_message(c.from_user.id,
                                     f'üí≥–ê–±–æ–Ω–µ–º–µ–Ω—Ç: {memberships_info[1]}\n\n'
                                     f'üèãüèª–ü–µ—Ä–µ–ª—ñ–∫ –ø–æ—Å–ª—É–≥:\n'
                                     f'- {memberships_info[4]} —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—å –∑ —Ç—Ä–µ–Ω–µ—Ä–æ–º\n'
                                     f'- —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –ø–æ —Ä–∞—Ü—ñ–æ–Ω—É —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è –≤—ñ–¥ –¥—ñ—î—Ç–æ–ª–æ–≥–∞\n'
                                     f'- –∫–æ–Ω—Ç—Ä–æ–ª—å —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è –¥—ñ—î—Ç–æ–ª–æ–≥–æ–º\n'
                                     f'- –∑–∞–º—ñ—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —Ç—ñ–ª–∞ —Ä–∞–∑ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å\n'
                                     f'- —Ñ–æ—Ç–æ "–¥–æ/–ø—ñ—Å–ª—è" —Ä–∞–∑ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å\n\n'
                                     f'‚è≥–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó - {memberships_info[3]} –º—ñ—Å—è—Ü—å\n\n'
                                     f'‚ñ™Ô∏è–¶—ñ–Ω–∞: {memberships_info[2]} –≥—Ä–Ω',
                                     reply_markup=r_back_to_menu,
                                     parse_mode='HTML'
                                     )
        await dell_message(c.from_user.id)
        await add_message_from_bot(msg)
    else:
        msg = await bot.send_message(c.from_user.id,
                                     f'üí≥–ê–±–æ–Ω–µ–º–µ–Ω—Ç: {memberships_info[1]}\n\n'
                                     f'üèãüèª–ü–µ—Ä–µ–ª—ñ–∫ –ø–æ—Å–ª—É–≥:\n'
                                     f'- {memberships_info[4]} —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—å –∑ —Ç—Ä–µ–Ω–µ—Ä–æ–º\n\n'
                                     f'‚è≥–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó - {memberships_info[3]} –º—ñ—Å—è—Ü—å\n\n'
                                     f'‚ñ™Ô∏è–¶—ñ–Ω–∞: {memberships_info[2]} –≥—Ä–Ω',
                                     reply_markup=r_back_to_menu,
                                     parse_mode='HTML'
                                     )
        await dell_message(c.from_user.id)
        await add_message_from_bot(msg)

    msg = await bot.send_invoice(
        chat_id=c.from_user.id,
        title=f'–ê–±–æ–Ω–µ–º–µ–Ω—Ç: {memberships_info[1]}',
        description='–í–∏ –∑–∞ –∫—Ä–æ–∫ –¥–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞ –∑–¥–æ—Ä–æ–≤–æ–≥–æ —Ç—ñ–ª–∞üòé',
        payload='membership',
        provider_token=PAYMENT_TOKEN,
        currency='UAH',
        prices=[
            LabeledPrice(
                label=f'–ê–±–æ–Ω–µ–º–µ–Ω—Ç: {memberships_info[1]}',
                amount=memberships_info[2] * 100
            ),
        ],
    )
    await add_message_from_bot(msg)


    await state.update_data(id_membersip=id_membersip)


