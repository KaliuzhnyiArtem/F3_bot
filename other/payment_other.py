from database.memberships_db import add_to_client_membership, add_to_trial_training
from database.msg_id_history_db import add_message_from_bot
from keybords.menu_buttons import r_book_data_training
from other.func_other import dell_message, get_data_from_fetchall
from database.user_db import get_client_id
from aiogram.dispatcher import FSMContext
from datetime import datetime


async def payment_membersip(message, state: FSMContext):
    """
    –î—ñ—ó —è–∫—ñ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—É
    :param state:
    :param message:
    :return:
    """
    current_data = str(datetime.now().date())
    client_id = get_data_from_fetchall(await get_client_id(message.from_user.id))
    membership_id = (await state.get_data())['id_membersip']

    await add_to_client_membership(client_id=client_id, membership_id=membership_id)

    msg = await message.answer('–û–ø–ª–∞—Ç–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—É –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ‚úÖ')
    await dell_message(message.from_user.id)
    await add_message_from_bot(msg)

    msg = await message.answer('–û–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞—Ä–∞–∑, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µüëáüèª. \n\n'
                               '–¢–∞–∫–æ–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ –ø—ñ–∑–Ω—ñ—à–µ –≤ –æ—Å–æ–±–∏—Å—Ç–æ–º—É –∫–∞–±—ñ–Ω–µ—Ç—ñüòä',
                               reply_markup=r_book_data_training)
    await add_message_from_bot(msg)


async def payment_massage(message):
    """
    –î—ñ—ó —è–∫—ñ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –º–∞—Å–∞–∂—É
    :param message:
    :return:
    """
    msg = await message.answer('–û–ø–ª–∞—Ç–∞ –º–∞—Å–∞–∂—É —É—Å–ø—ñ—à–Ω–æ‚úÖ')
    await dell_message(message.from_user.id)
    await add_message_from_bot(msg)

    msg = await message.answer('–û–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É –º–∞—Å–∞–∂—É –∑–∞—Ä–∞–∑, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µüëáüèª. \n\n'
                               '–¢–∞–∫–æ–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ –ø—ñ–∑–Ω—ñ—à–µ –≤ –æ—Å–æ–±–∏—Å—Ç–æ–º—É –∫–∞–±—ñ–Ω–µ—Ç—ñüòä',
                               reply_markup=r_book_data_training)
    await add_message_from_bot(msg)


async def payment_trial_trainig(message):
    """
    –î—ñ—ó —è–∫—ñ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –ø—Ä–æ–±–Ω–æ–≥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
    :param message:
    :return:
    """
    current_data = str(datetime.now().date())
    client_id = get_data_from_fetchall(await get_client_id(message.from_user.id))
    await add_to_trial_training(client_id=client_id, current_data=current_data)

    msg = await message.answer('–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–±–Ω–æ–≥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ‚úÖ')
    await dell_message(message.from_user.id)
    await add_message_from_bot(msg)

    msg = await message.answer('–û–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞—Ä–∞–∑, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µüëáüèª. \n\n'
                               '–¢–∞–∫–æ–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ –ø—ñ–∑–Ω—ñ—à–µ –≤ –æ—Å–æ–±–∏—Å—Ç–æ–º—É –∫–∞–±—ñ–Ω–µ—Ç—ñüòä',
                               reply_markup=r_book_data_training)
    await add_message_from_bot(msg)
